modules:
  # ensure that environment paths are properly updated 
  # based on what is installed
  prefix_inspections:
    bin:
      - PATH
    lib:
      - LIBRARY_PATH
      - LD_LIBRARY_PATH
    lib64:
      - LIBRARY_PATH
      - LD_LIBRARY_PATH
    include:
      - CPATH
    '':
      - CMAKE_PREFIX_PATH

  default:
    enable::
      - tcl 
    roots:
      tcl: /pawsey/cle60up07/spack/modulefiles/

  tcl:
    # remove hashes from module name, can lead to more conflicts 
    hash_length: 0

    projections:
      # modules on magnus have one of [apps, tools, python, devel] as start of module name 
      # an then {name}/{version}-{compiler.name}-{compiler.version}'
      # will be necessary to think of how to include variants 
      # that does not require manual updates. Fortunately, not many packages 
      # need this update 
      
      gromacs: 'apps/{name}/{version}-{compiler.name}-{compiler.version}'

      awscli: 'utilities/{name}/{version}'
      rclone: 'utilities/{name}/{version}'
      miniocli: 'utilities/{name}/{version}'

      go: 'programming-languages/{name}/{version}'

      all: 'devel/dependencies/.{name}/{version}-{hash:7}'


    # prevent modules from being generated for any packages 
    # build with this blacklist
    # example below is for openmpi
    # blacklist: ['openmpi']
    # save those that are on the whitelist
    # example below if for fftw
    # whitelist: ['fftw'] 
    
    # for all packages produce module files that
    all:
      # add to module file a conflict with any other module that shares the same {name}
      conflict:
        - '{name}'
      # add a suffice to module name for all modules with a specific dependancy 
      suffixes:
        ^mpi: "mpi"
      # to be consistent with current module setup, 
      # add to environment a {name}_HOME which stores the prefix 
      # to the package
      environment:
        set:
          '{name}_HOME': '{prefix}'
        set:
          'MAALI_{name}_HOME': '{prefix}'
      autoload: none

    # select all packages that depend on python 
    # and set the modules to autoload python
    ^python:
      autoload:  direct
